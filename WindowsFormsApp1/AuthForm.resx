<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="authFormBindingSource.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="$this.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        BAAAAgASBQkJZAcMDWpjdnj/boGE/3aIjf9yhYn/d46U/zhER/8TGRv/DBAP/wQHCv8AAQLOERcaN0xc
        X9tziYv/fZSZ/4SaoP9hcXX/Iysr/w8UFfsHCgvuBAgHyAEFA30BAgKxBAgH8gcND7lfcnT/coWJ/3SG
        jf9yhIr/gJed/3iMkf9IU1f/LTQ3/xgeIP8RFBX1DBER1S87Pfdhc3T/anx+/2h5e/9dbm//PUtM/x0k
        Jf8LEBD/CAwM/wgNDP8ICwn/DRMS/woPDtdOXWH/c4WK/3aLkf9yhYn/cIKE/5KqsP+ctbz/k6iu/36Q
        l/9qe4D/WGdq/19vdP9whYj/d4uP/3GFif9kd3j/W2xt/0BPUf8gKiv/GiAh/x0lKP8WHx7/ERgZ9AQI
        CGJOXGD3doqQ/3yTmP9zhov/cYSH/4ynrP+eub//n7i+/63FzP+sw8n/n7a9/5mwuP+Joaf/g5uh/36V
        nP9xhIn/X3F1/1dobP9DUVT/Iiwu/x0mJ/8ZICD/Fx0dvwkODg9pfH+OfJKY/4CXn/98kZb/g5qh/5iw
        tv+husD/n7rA/6rDyf+0zdP/s83S/6bAxP+SrbH/jKWq/4Wdo/9zhor/XW9y/1BgY/9JV1n/LTo8/xwl
        Jv8ZICD/GiAguR0hIQZ1iYtwfpSa/4Sao/+FnaT/jqet/5m0uf+hu8H/n7rA/6nCyP+0zdP/rMbL/524
        vf+Ysrj/kaiv/4Wdo/9vhIb/WGls/0hYWf8+TE3/Mj5C/x0lJv8YICD/Fh4duRIaGgdLWl1ycYeM/4qh
        qf+Npaz/lbG2/5q0uf+atrz/nLi+/6fAx/+yytH/qMLI/523vf+SrLH/i6Wr/4CXnv9tf4T/WWpu/0la
        W/86R0r/KjU5/xshIf8XHh3+CxAPswIDBAc4Q0Rza36C/4ujq/+RrrH/lK+0/5y1vP+ct73/nbm//6G7
        wf+nwMf/o73F/5exuP+Pp6z/iqKp/32Tm/9qe3//V2ls/0tdXf83RUf/ISor/xccHP8WHR32DRISUgAA
        AAE4PkFja32E9omiqv+UsLX/mbO5/5u0u/+hu8H/nbm//5+6wP+bt73/lrK5/5Grsf+Ko6j/gpmg/3uR
        mP9pe37/Vmdp/0VVV/8wPUH/GyMj/xIXGP8QFhbkCxIPLQAAAAA1PUERYHJ3un2Umv6Op6//nLa9/5aw
        t/+fub//nLi9/5i0u/+Wsrb/kKuw/4ulqv+DnKL/fZKY/3SGjP9kdXn/TmBh/z1LTf8oMjX/Fx0e/xAU
        FP8LDw+OAAgBBQAAAAAAAAABSFZZU2h5fveAlJv/kKmx/5Krsv+Xr7X/m7O5/5Ous/+RrLL/i6Sq/4if
        p/+Alpz/d4yR/2t9gv9YaGr/RFFU/zZBQ/8jKSz/EBMW/wkNDb0GCAUoAwsFAAAAAAAFDwwADhISEzhB
        RqBic3frdYuQ/4adpv+Joaj/hpuj/4eepv+Koqv/hZyk/36Tmv96j5L/cYWI/2R0ef9LW13/OURI/yUt
        MP8PFBX/CQwMvAYLCyQFBAoAAAAAAAAAAAAAAAAAEhcXAA0SFww+SExDUmFiol5vcu9sf4T/cYaJ/3OJ
        jf92i4//doqP/3CBhv9meHv/XG1w/01cXv85REj/Iysu/hATFeEGBweOBAcHJAcMDAAHDAMAAAAAAAAA
        AAAAAAAAAAAAAB0kKQBTYmQABQkICDhFRT1BTk+iSlpa5VFiZP9Zam3/V2Zq/1FhZP9IV1n/OUVI/ys0
        Ne0dIiK/Cg0OigQEBi8AAAABBwsLAAcMDAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHSUlAEZV
        VgAOFxUGFR8aSi86O3kuODraLDY4/yYwMf4oMTOjGyQidQsQD1gFBgYLAAAAAwUGCAADAQAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAD/AB8A/gAfAPwADwD4AA8A8AAHAOAABwDgAAcA4AAHAOAABwDgAA8AwAABAIAA
        AAAAAAAAAAAAAAAAAAAAAAwAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAA
        AQAAAAMAgAAHAMAADwDwAB8A/AB/AA==
</value>
  </data>
</root>